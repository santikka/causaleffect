% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join.R
\name{join}
\alias{join}
\title{Join}
\usage{
join(J, D, vari, cond, S, M, O, G.unobs, G, G.obs, topo)
}
\arguments{
\item{J}{character vector. Joint set \code{P(J|D)}; already processed and included in joint distribution
from previous \code{\link{simplify}} iteration. Initially, may be empty for the starting point of
the joint distribution. \code{vari} is added to expand it if d-separation conditions are met.}

\item{D}{character vector. Term \code{P(V|C) := P(Vk|Ck)}; set of variables that condition the joint distribution.
\code{Join} checks and updates \code{D} as necessary to maintain the validity of the joint distribution
when combined with \code{vari}.}

\item{vari}{character scalar. Current variable being considered for inclusion in the joint distribution.}

\item{cond}{character vector. Set of variables that condition the current variable \code{vari}. \code{Join} uses \code{cond}
to evaluate conditional independence and determine if \code{vari} can be added to \code{J}.}

\item{S}{likely a character vector. Not used directly in \code{join}. Current summation variable.}

\item{M}{character vector. Missing variables (variables not contained within the expression).}

\item{O}{character vector. Observed variables (variables contained within the expression).}

\item{G.unobs}{igraph object created with \code{igraph::unobserved.graph(G)}. Separate graph that turns bidirected edges into explicit nodes for unobserved confounders.}

\item{G}{igraph object created with \code{igraph::graph.formula()}. Main graph G. Includes bidirected edges.}

\item{G.obs}{igraph object created with \code{igraph::observed.graph(G)}. Separate graph that does not contain bidirected edges (only contains the directed edges with observed nodes).}

\item{topo}{igraph list object created with \code{igraph::topological.sort} and \code{igraph::get.vertex.attribute}. The topological ordering of the vertices in graph G.}
}
\value{
Joint result, or the original result if none of the conditions for joining were met.
}
\description{
Attempts to combine two terms: the joint term \code{P(J|D)} obtained from \code{simplify()} and the
term \code{P(V|C) := P(Vk|Ck)} of the current iteration step. The goal is to
determine if these terms can be combined based on the d-separation criteria in the graph \code{G}.
}
\details{
This function depends on several functions from the causaleffect package, including: \link{powerset}, \link{wrap.dSep}, and \link{insert}.
}
\examples{
\dontrun{
# Example usage here
}

}
\references{
Tikka, S., & Karvanen, J. (2017). Simplifying probabilistic expressions in causal inference. Journal of Machine Learning Research, 18(36), 1-30.
}
\seealso{
\code{\link{causal.effect}}, \code{\link{parse.expression}}, \code{\link{get.expression}}, \code{\link{probability}}

\code{\link{simplify}}, \code{\link{wrap.dSep}}, \code{\link{insert}}
}
\author{
Haley Hummel,
Psychology PhD student at Oregon State University
}
\concept{graph theory}
\concept{probabilistic expressions}
\keyword{manip}
\keyword{math}
\keyword{models}
\keyword{utilities}
